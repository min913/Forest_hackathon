import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
import xgboost as xgb
from sklearn.metrics import mean_squared_error

# 전처리
df = pd.read_csv('data.csv')
df = df.drop(['APG 일련번호', '치유측정정보 일련번호', 'APG측정차트번호', '측정대상자명', 'APG측정일시'], axis=1)
df = df.dropna()

# 범주형 데이터를 숫자로 변환
le = LabelEncoder()
df['측정대상자성별명'] = le.fit_transform(df['측정대상자성별명'])
df['파형 타입 설명'] = le.fit_transform(df['파형 타입 설명'])
df['미분백파지수 상태 설명'] = le.fit_transform(df['미분백파지수 상태 설명'])
df['혈액박출강도 상태 설명'] = le.fit_transform(df['혈액박출강도 상태 설명'])
df['혈관탄성도 상태 설명'] = le.fit_transform(df['혈관탄성도 상태 설명'])
df['혈관잔혈량 상태 설명'] = le.fit_transform(df['혈관잔혈량 상태 설명'])
df['평균심박수 상태 설명'] = le.fit_transform(df['평균심박수 상태 설명'])


X = df.drop('SPRT_STR_PRSMP_NMVL', axis=1)
y = df['SPRT_STR_PRSMP_NMVL']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


#모델링
model = xgb.XGBRegressor(objective ='reg:squarederror', colsample_bytree = 0.3, learning_rate = 0.1,
                max_depth = 5, alpha = 10, n_estimators = 100)
model.fit(X_train, y_train)
pred = model.predict(X_test)
mse = mean_squared_error(y_test, pred)


print(f'Mean Squared Error: {mse}')
